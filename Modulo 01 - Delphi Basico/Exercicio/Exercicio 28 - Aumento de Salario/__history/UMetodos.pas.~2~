unit UMetodos;

interface

uses
  System.SysUtils, Vcl.Dialogs;

type
  TTipoFuncionario = (tpMenor3 = 1, tpEntre3e10, tpEntre10e20, tpOutros);
  TFuncionario = record
    Nome: String;
    Salario: Currency;
    Tipo: TTipoFuncionario;
  end;

var
  xListaFuncionarios: array of TFuncionario;

implementation
  procedure AumentarLista;
  begin
    SetLength(xListaFuncionarios, Length(xListaFuncionarios) + 1);

  end;

procedure CadastrarFuncionario;
  var
    xFuncionario: TFuncionario;
    xSalarioMinimo: Currency;
  begin
    while not TryStrToCurr(InputBox('Adicionando um funcionário ','Qual o valor do salário mínimo vingente?',''), xSalarioMinimo) do
      ShowMessage('Erro na inserção do Salário Mínimo, tente novamente.');
    Repeat
      xFuncionario.Nome := InputBox('Adicionando um funcionário ','Qual o Nome do Funcionário?','<Desconhecido>');
      while not TryStrToCurr(InputBox('Adicionando um funcionário ','Qual o Nome do Funcionário?','<Desconhecido>'), xFuncionario.Salario) do
        ShowMessage('Erro na inserção do Salário, tente novamente.');
      if xFuncionario.Salario < (xSalarioMinimo * 3) then
        begin
          xFuncionario.Tipo := tpMenor3;
        end
      else if xFuncionario.Salario >= (xSalarioMinimo * 10)then
        begin
          xFuncionario.Tipo := tpEntre3e10;
        end
      else if (xFuncionario.Salario >= (xSalarioMinimo * 20))then
        begin
          xFuncionario.Tipo := tpEntre10e20;
        end
      else
        begin
          xFuncionario.Tipo := tpOutros;
        end;

      if not (xFuncionario.Nome = '') or (xFuncionario.Salario = 0) then
        begin
          AumentarLista;
          xListaFuncionarios[Length(xListaFuncionarios) - 1] := xFuncionario;
        end
      else
        break;
    Until (xFuncionario.Nome = '') or (xFuncionario.Salario = 0);
  end;

function CalcularAumento(const aSalario: Currency; aTipo: TTipoFuncionario): Currency;
  begin
    case TTipoFuncionario(aTipo) of
      tpMenor3:
        begin
          Result := aSalario * 1.5;
        end;
      tpEntre3e10:
        begin
          Result := aSalario * 1.2;
        end;
      tpEntre10e20:
        begin
          Result := aSalario * 1.15;
        end;
      tpOutros:
        begin
          Result := aSalario * 1.1;
        end;
    end;
  end;

function ListarTotal: String;
  var
    I: integer;
  begin
    for I := 1 to Length(xListaFuncionarios) do
      Result:= Format('%s - De %n para %n',
      [xListaFuncionarios[I].Nome,
      xListaFuncionarios[I].Salario,
      CalcularAumento(xListaFuncionarios[I].Salario, xListaFuncionarios[I].Tipo)]);
  end;

end.
